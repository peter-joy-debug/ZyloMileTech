{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n// import { GUI } from 'three/addons/libs/lil-gui.module.min.js';\n// import Stats from 'three/addons/libs/stats.module.js';\nexport class ThreeJsComponent {}\nThreeJsComponent.ɵfac = function ThreeJsComponent_Factory(t) {\n  return new (t || ThreeJsComponent)();\n};\nThreeJsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreeJsComponent,\n  selectors: [[\"app-three-js\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"id\", \"info\"], [\"href\", \"https://threejs.org\", \"target\", \"_blank\", \"rel\", \"noopener\"]],\n  template: function ThreeJsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \"three.js\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3, \" raycaster - sprite\");\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#canvas-container[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGhyZWUtanMvdGhyZWUtanMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0VBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIjY2FudmFzLWNvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAEA;AACA;AACA;AAOA,OAAM,MAAOA,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,8BAAe;MAA6DA,wBAAQ;MAAAA,iBAAI;MAACA,mCAAkB;MAAAA,qBAAI;MAAAA,iBAAM","names":["ThreeJsComponent","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\ALP_PROJECTS\\ZyloMileTech\\MainFrontend\\src\\app\\three-js\\three-js.component.ts","D:\\ALP_PROJECTS\\ZyloMileTech\\MainFrontend\\src\\app\\three-js\\three-js.component.html"],"sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport * as THREE from 'three';\n// import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n// import { GUI } from 'three/addons/libs/lil-gui.module.min.js';\n// import Stats from 'three/addons/libs/stats.module.js';\n\n@Component({\n  selector: 'app-three-js',\n  templateUrl: './three-js.component.html',\n  styleUrls: ['./three-js.component.css']\n})\nexport class ThreeJsComponent {\n\n}\n","<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> raycaster - sprite<br></div>\n\n\t<!-- Import maps polyfill -->\n\t<!-- Remove this when import maps will be widely supported -->\n\t<script async src=\"https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js\"></script>\n\n\t<script type=\"importmap\">\n\t\t{\n\t\t\t\"imports\": {\n\t\t\t\t\"three\": \"../build/three.module.js\",\n\t\t\t\t\"three/addons/\": \"./jsm/\"\n\t\t\t}\n\t\t}\n\t</script>\n\n\t<script type=\"module\">\n\n\t\timport * as THREE from 'three';\n\n\t\timport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\n\t\tlet renderer, scene, camera;\n\t\tlet group;\n\n\t\tlet selectedObject = null;\n\t\tconst raycaster = new THREE.Raycaster();\n\t\tconst pointer = new THREE.Vector2();\n\n\t\tinit();\n\t\tanimate();\n\n\t\tfunction init() {\n\n\t\t\t// init renderer\n\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\tdocument.body.appendChild( renderer.domElement );\n\n\t\t\t// init scene\n\t\t\tscene = new THREE.Scene();\n\t\t\tscene.background = new THREE.Color( 0xffffff );\n\n\t\t\tgroup = new THREE.Group();\n\t\t\tscene.add( group );\n\n\t\t\t// init camera\n\t\t\tcamera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 1, 1000 );\n\t\t\tcamera.position.set( 15, 15, 15 );\n\t\t\tcamera.lookAt( scene.position );\n\n\t\t\tconst controls = new OrbitControls( camera, renderer.domElement );\n\t\t\tcontrols.minDistance = 15;\n\t\t\tcontrols.maxDistance = 250;\n\n\t\t\t// add sprites\n\n\t\t\tconst sprite1 = new THREE.Sprite( new THREE.SpriteMaterial( { color: '#69f' } ) );\n\t\t\tsprite1.position.set( 6, 5, 5 );\n\t\t\tsprite1.scale.set( 2, 5, 1 );\n\t\t\tgroup.add( sprite1 );\n\n\t\t\tconst sprite2 = new THREE.Sprite( new THREE.SpriteMaterial( { color: '#69f', sizeAttenuation: false } ) );\n\t\t\tsprite2.material.rotation = Math.PI / 3 * 4;\n\t\t\tsprite2.position.set( 8, - 2, 2 );\n\t\t\tsprite2.center.set( 0.5, 0 );\n\t\t\tsprite2.scale.set( .1, .5, .1 );\n\t\t\tgroup.add( sprite2 );\n\n\t\t\tconst group2 = new THREE.Object3D();\n\t\t\tgroup2.scale.set( 1, 2, 1 );\n\t\t\tgroup2.position.set( - 5, 0, 0 );\n\t\t\tgroup2.rotation.set( Math.PI / 2, 0, 0 );\n\t\t\tgroup.add( group2 );\n\n\t\t\tconst sprite3 = new THREE.Sprite( new THREE.SpriteMaterial( { color: '#69f' } ) );\n\t\t\tsprite3.position.set( 0, 2, 5 );\n\t\t\tsprite3.scale.set( 10, 2, 3 );\n\t\t\tsprite3.center.set( - 0.1, 0 );\n\t\t\tsprite3.material.rotation = Math.PI / 3;\n\t\t\tgroup2.add( sprite3 );\n\n\t\t\twindow.addEventListener( 'resize', onWindowResize );\n\t\t\tdocument.addEventListener( 'pointermove', onPointerMove );\n\n\t\t}\n\n\t\tfunction animate() {\n\n\t\t\trenderer.render( scene, camera );\n\t\t\trequestAnimationFrame( animate );\n\n\t\t}\n\n\t\tfunction onWindowResize() {\n\n\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( selectedObject ) {\n\n\t\t\t\tselectedObject.material.color.set( '#69f' );\n\t\t\t\tselectedObject = null;\n\n\t\t\t}\n\n\t\t\tpointer.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n\t\t\tpointer.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n\t\t\traycaster.setFromCamera( pointer, camera );\n\n\t\t\tconst intersects = raycaster.intersectObject( group, true );\n\n\t\t\tif ( intersects.length > 0 ) {\n\n\t\t\t\tconst res = intersects.filter( function ( res ) {\n\n\t\t\t\t\treturn res && res.object;\n\n\t\t\t\t} )[ 0 ];\n\n\t\t\t\tif ( res && res.object ) {\n\n\t\t\t\t\tselectedObject = res.object;\n\t\t\t\t\tselectedObject.material.color.set( '#f00' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
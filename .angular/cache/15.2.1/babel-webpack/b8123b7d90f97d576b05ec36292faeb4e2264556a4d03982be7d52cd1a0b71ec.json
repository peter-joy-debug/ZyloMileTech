{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as THREE from 'three';\nlet ThreeJsComponent = class ThreeJsComponent {\n  constructor(container) {\n    // Create a renderer\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    // Set the size of the renderer\n    this.renderer.setSize(container.clientWidth, container.clientHeight);\n    // Add the renderer to the container element\n    container.appendChild(this.renderer.domElement);\n    // Create a scene\n    this.scene = new THREE.Scene();\n    // Create a camera\n    this.camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\n    this.camera.position.z = 5;\n    // Create a cube\n    this.cube = new THREE.Mesh(new THREE.BoxGeometry(1, 1, 1), new THREE.MeshNormalMaterial());\n    // Add the cube to the scene\n    this.scene.add(this.cube);\n    // Start the animation loop\n    this.animate();\n  }\n  animate() {\n    // Rotate the cube\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n    // Render the scene\n    this.renderer.render(this.scene, this.camera);\n    // Request the next frame\n    requestAnimationFrame(() => this.animate());\n  }\n};\nThreeJsComponent = __decorate([Component({\n  selector: 'app-three-js',\n  templateUrl: './three-js.component.html',\n  styleUrls: ['./three-js.component.css']\n})], ThreeJsComponent);\nexport { ThreeJsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA4B,eAAe;AAC7D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAOvB,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAE3BC,YAAYC,SAAS;IACnB;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIJ,KAAK,CAACK,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAE,CAAC;IAE5D;IACA,IAAI,CAACF,QAAQ,CAACG,OAAO,CAACJ,SAAS,CAACK,WAAW,EAAEL,SAAS,CAACM,YAAY,CAAC;IAEpE;IACAN,SAAS,CAACO,WAAW,CAAC,IAAI,CAACN,QAAQ,CAACO,UAAU,CAAC;IAE/C;IACA,IAAI,CAACC,KAAK,GAAG,IAAIZ,KAAK,CAACa,KAAK,EAAE;IAE9B;IACA,IAAI,CAACC,MAAM,GAAG,IAAId,KAAK,CAACe,iBAAiB,CAAC,EAAE,EAAEZ,SAAS,CAACK,WAAW,GAAGL,SAAS,CAACM,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC;IACxG,IAAI,CAACK,MAAM,CAACE,QAAQ,CAACC,CAAC,GAAG,CAAC;IAE1B;IACA,IAAI,CAACC,IAAI,GAAG,IAAIlB,KAAK,CAACmB,IAAI,CACxB,IAAInB,KAAK,CAACoB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC9B,IAAIpB,KAAK,CAACqB,kBAAkB,EAAE,CAC/B;IAED;IACA,IAAI,CAACT,KAAK,CAACU,GAAG,CAAC,IAAI,CAACJ,IAAI,CAAC;IAEzB;IACA,IAAI,CAACK,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL;IACA,IAAI,CAACL,IAAI,CAACM,QAAQ,CAACC,CAAC,IAAI,IAAI;IAC5B,IAAI,CAACP,IAAI,CAACM,QAAQ,CAACE,CAAC,IAAI,IAAI;IAE5B;IACA,IAAI,CAACtB,QAAQ,CAACuB,MAAM,CAAC,IAAI,CAACf,KAAK,EAAE,IAAI,CAACE,MAAM,CAAC;IAE7C;IACAc,qBAAqB,CAAC,MAAM,IAAI,CAACL,OAAO,EAAE,CAAC;EAC7C;CACD;AA3CYtB,gBAAgB,eAL5BF,SAAS,CAAC;EACT8B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW9B,gBAAgB,CA2C5B;SA3CYA,gBAAgB","names":["Component","THREE","ThreeJsComponent","constructor","container","renderer","WebGLRenderer","antialias","setSize","clientWidth","clientHeight","appendChild","domElement","scene","Scene","camera","PerspectiveCamera","position","z","cube","Mesh","BoxGeometry","MeshNormalMaterial","add","animate","rotation","x","y","render","requestAnimationFrame","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\ALP_PROJECTS\\ZyloMileTech\\MainFrontend\\src\\app\\three-js\\three-js.component.ts"],"sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport * as THREE from 'three';\n\n@Component({\n  selector: 'app-three-js',\n  templateUrl: './three-js.component.html',\n  styleUrls: ['./three-js.component.css']\n})\nexport class ThreeJsComponent {\n\n  constructor(container) {\n    // Create a renderer\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n\n    // Set the size of the renderer\n    this.renderer.setSize(container.clientWidth, container.clientHeight);\n\n    // Add the renderer to the container element\n    container.appendChild(this.renderer.domElement);\n\n    // Create a scene\n    this.scene = new THREE.Scene();\n\n    // Create a camera\n    this.camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);\n    this.camera.position.z = 5;\n\n    // Create a cube\n    this.cube = new THREE.Mesh(\n      new THREE.BoxGeometry(1, 1, 1),\n      new THREE.MeshNormalMaterial()\n    );\n\n    // Add the cube to the scene\n    this.scene.add(this.cube);\n\n    // Start the animation loop\n    this.animate();\n  }\n\n  animate() {\n    // Rotate the cube\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n\n    // Render the scene\n    this.renderer.render(this.scene, this.camera);\n\n    // Request the next frame\n    requestAnimationFrame(() => this.animate());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
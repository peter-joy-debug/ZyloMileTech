{"ast":null,"code":"import { NgbCarouselConfig, NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgFor, NgIf } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nfunction CarouselCompComponent_ngb_carousel_0_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"h3\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const image_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", image_r2.src, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(image_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(image_r2.short);\n  }\n}\nfunction CarouselCompComponent_ngb_carousel_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CarouselCompComponent_ngb_carousel_0_1_ng_template_0_Template, 7, 3, \"ng-template\", 5);\n  }\n}\nfunction CarouselCompComponent_ngb_carousel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ngb-carousel\", 3);\n    i0.ɵɵtemplate(1, CarouselCompComponent_ngb_carousel_0_1_Template, 1, 0, null, 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showNavigationArrows\", ctx_r0.showNavigationArrows)(\"showNavigationIndicators\", ctx_r0.showNavigationIndicators);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.images);\n  }\n}\n// import { Injectable } from '@angular/core';\nexport class CarouselCompComponent {\n  constructor(config) {\n    this.showNavigationArrows = true;\n    this.showNavigationIndicators = true;\n    this.images = [{\n      title: 'First Slide',\n      short: 'First Slide Short',\n      src: \"https://picsum.photos/id/431/900/500\"\n    }, {\n      title: 'Second Slide',\n      short: 'Second Slide Short',\n      src: \"https://picsum.photos/id/17/900/500 \"\n    }, {\n      title: 'Third Slide',\n      short: 'Third Slide Short',\n      src: \"https://picsum.photos/id/500/900/500\"\n    }];\n    // customize default values of carousels used by this component tree\n    config.showNavigationArrows = false;\n    config.showNavigationIndicators = false;\n    config.interval = 2000;\n    config.keyboard = true;\n    config.pauseOnHover = true;\n  }\n}\nCarouselCompComponent.ɵfac = function CarouselCompComponent_Factory(t) {\n  return new (t || CarouselCompComponent)(i0.ɵɵdirectiveInject(i1.NgbCarouselConfig));\n};\nCarouselCompComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CarouselCompComponent,\n  selectors: [[\"app-carousel-comp\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([NgbCarouselConfig]), i0.ɵɵStandaloneFeature],\n  decls: 7,\n  vars: 1,\n  consts: [[3, \"showNavigationArrows\", \"showNavigationIndicators\", 4, \"ngIf\"], [\"role\", \"group\", \"aria-label\", \"Carousel toggle controls\", 1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", \"btn-sm\", 3, \"click\"], [3, \"showNavigationArrows\", \"showNavigationIndicators\"], [4, \"ngFor\", \"ngForOf\"], [\"ngbSlide\", \"\"], [\"alt\", \"Random first slide\", 3, \"src\"], [1, \"carousel-caption\"]],\n  template: function CarouselCompComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CarouselCompComponent_ngb_carousel_0_Template, 2, 3, \"ngb-carousel\", 0);\n      i0.ɵɵelement(1, \"hr\");\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CarouselCompComponent_Template_button_click_3_listener() {\n        return ctx.showNavigationArrows = !ctx.showNavigationArrows;\n      });\n      i0.ɵɵtext(4, \" Toggle navigation arrows \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CarouselCompComponent_Template_button_click_5_listener() {\n        return ctx.showNavigationIndicators = !ctx.showNavigationIndicators;\n      });\n      i0.ɵɵtext(6, \" Toggle navigation indicators \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.images);\n    }\n  },\n  dependencies: [NgbCarouselModule, i1.NgbCarousel, i1.NgbSlide, NgIf, NgFor],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,EAAEC,iBAAiB,QAAQ,4BAA4B;AACjF,SAASC,KAAK,EAAEC,IAAI,QAAQ,iBAAiB;;;;;ICIzCC,2BAAK;IACHA,yBAAiD;IACnDA,iBAAM;IACNA,8BAA8B;IACxBA,YAAiB;IAAAA,iBAAK;IAC1BA,yBAAG;IAAAA,YAAiB;IAAAA,iBAAI;;;;IAJnBA,eAAiB;IAAjBA,oDAAiB;IAGlBA,eAAiB;IAAjBA,oCAAiB;IAClBA,eAAiB;IAAjBA,oCAAiB;;;;;IANxBA,uGAQc;;;;;IAbdA,uCAID;IACCA,gFAQc;IAChBA,iBAAe;;;;IAZbA,kEAA6C;IAGLA,eAAS;IAATA,uCAAS;;;ADFnD;AAWA,OAAM,MAAOC,qBAAqB;EAWjCC,YAAYC,MAAyB;IAVpC,yBAAoB,GAAG,IAAI;IAC5B,6BAAwB,GAAG,IAAI;IAC9B,WAAM,GAAG,CACP;MAACC,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,GAAG,EAAE;IAAsC,CAAC,EAC/F;MAACF,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,GAAG,EAAE;IAAsC,CAAC,EACjG;MAACF,KAAK,EAAE,aAAa;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,GAAG,EAAE;IAAsC,CAAC,CAChG;IAKD;IACAH,MAAM,CAACI,oBAAoB,GAAG,KAAK;IACnCJ,MAAM,CAACK,wBAAwB,GAAG,KAAK;IACrCL,MAAM,CAACM,QAAQ,GAAG,IAAI;IACtBN,MAAM,CAACO,QAAQ,GAAG,IAAI;IACtBP,MAAM,CAACQ,YAAY,GAAG,IAAI;EAC7B;;AAlBYV,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAW;EAAAC;EAAAC,iCAHrB,CAAClB,iBAAiB,CAAC;EAAAmB;EAAAC;EAAAC;EAAAC;IAAA;MCX9BlB,wFAca;MAEfA,qBAAM;MAENA,8BAA0E;MAClDA;QAAA;MAAA,EAAsD;MAC1EA,0CACF;MAAAA,iBAAS;MACTA,iCAAyH;MAAnGA;QAAA;MAAA,EAA8D;MAClFA,8CACF;MAAAA,iBAAS;;;MAvBRA,iCAAY;;;iBDOJH,iBAAiB,+BAAEE,IAAI,EAAED,KAAK;EAAAqB;AAAA","names":["NgbCarouselConfig","NgbCarouselModule","NgFor","NgIf","i0","CarouselCompComponent","constructor","config","title","short","src","showNavigationArrows","showNavigationIndicators","interval","keyboard","pauseOnHover","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["D:\\ALP_PROJECTS\\ZyloMileTech\\MainFrontend\\src\\app\\carousel-comp\\carousel-comp.component.ts","D:\\ALP_PROJECTS\\ZyloMileTech\\MainFrontend\\src\\app\\carousel-comp\\carousel-comp.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgbCarouselConfig, NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgFor, NgIf } from '@angular/common';\n// import { Injectable } from '@angular/core';\n\n@Component({\n  selector: 'app-carousel-comp',\n  standalone: true,\n\timports: [NgbCarouselModule, NgIf, NgFor],\n  templateUrl: './carousel-comp.component.html',\n  styleUrls: ['./carousel-comp.component.css'],\n  providers: [NgbCarouselConfig], // add NgbCarouselConfig to the component providers\n})\n\nexport class CarouselCompComponent  {\n  showNavigationArrows = true;\n\tshowNavigationIndicators = true;\n  images = [\n    {title: 'First Slide', short: 'First Slide Short', src: \"https://picsum.photos/id/431/900/500\"},\n    {title: 'Second Slide', short: 'Second Slide Short', src: \"https://picsum.photos/id/17/900/500 \"},\n    {title: 'Third Slide', short: 'Third Slide Short', src: \"https://picsum.photos/id/500/900/500\"}\n  ];\n   \n\n\n\tconstructor(config: NgbCarouselConfig) {\n\t\t// customize default values of carousels used by this component tree\n\t\tconfig.showNavigationArrows = false;\n\t\tconfig.showNavigationIndicators = false;\n    config.interval = 2000;\n    config.keyboard = true;\n    config.pauseOnHover = true;\n\t}\n}\n\n","  <ngb-carousel\n  *ngIf=\"images\"\n  [showNavigationArrows]=\"showNavigationArrows\"\n  [showNavigationIndicators]=\"showNavigationIndicators\"\n>\n  <ng-template ngbSlide *ngFor=\"let image of images\">\n    <div>\n      <img [src]=\"image.src\" alt=\"Random first slide\" >\n    </div>\n    <div class=\"carousel-caption\">\n      <h3>{{ image.title }}</h3>\n      <p>{{ image.short }}</p>\n    </div>\n  </ng-template>\n</ngb-carousel>\n\n<hr />\n\n<div class=\"btn-group\" role=\"group\" aria-label=\"Carousel toggle controls\">\n  <button type=\"button\" (click)=\"showNavigationArrows = !showNavigationArrows\" class=\"btn btn-outline-dark btn-sm\">\n    Toggle navigation arrows\n  </button>\n  <button type=\"button\" (click)=\"showNavigationIndicators = !showNavigationIndicators\" class=\"btn btn-outline-dark btn-sm\">\n    Toggle navigation indicators\n  </button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}